Xmt_xhist consists of:
- bin/xhist_instrument	a perl script to instrument C, C++ or Java source files 
- bin/xhist_report	a perl script to post-process binary trace files for human reading
- libxhist		C and/or Java runtime libraries to be linked to the program to be traced

Installing the Perl scripts
===========================
  -  sudo cp $XMT/xmt_xhist/bin/xhist_* /usr/local/bin;  rehash;
  -  Install the perl module into your perl site-install location
	this is found by running perl -V:installsitelib
  -  e.g.  sudo cp -r $XMT/xmt_xhist/bin/XMT /usr/local/share/perl/<version>

compiling libxhist using xmt_build
====================================
xmt_xhist is a package within the Extensible Mangement (XMT) collection.
xmt_xhist Another such package is "xmt_build", a framework for building software in
a multi-platform, multi-language environment.
xmt_xhist/libxhist can be compiled for C, C++ or Java and targeted to multiple
target architectures using the xmt_build package.

To generate the libxhist library using the xmt_build framework, 
follow these steps:

 1. depending on your preferred shell, edit either the .bashrc or .cshrc file 
    in the XMT root directory ($XMT)
  - uncomment the appropriate "source xmt_xhist/proto/*rc" line

 2. configure the xmt_build pkg by editing  $XMT/xmt_build/proto/bashrc or cshrc and
    setting the environment variable XMTBUILD_DFLT_ARCH to your preferred target architecture
    from among the supported choices listed in $XMTBUILD_SUPP_ARCHS
  - save the file
  - review the compiler settings for your preferred language and target architecture
    in $XMT/xmt_build/proto/lang/<language>
    where <language> is one of those listed in that directory
  - ensure that the paths & flags to your compiler & linker are correct.

 3. source $XMT/.bashrc or $XMT/.cshrc file from your ~/.profile or ~/.cshrc

 4. chdir to $XMT/xmt_xhist/libxhist/src and build the library
    for your chosen default architecture by invoking ether 'make c'  or 'make java';
        e.g.:   make c;
  - the library (or .jar) will be created in the xmt_xhist/tgt/<arch> directory.
        
 5.  Place the resulting library or jar in your program's search path or classpath

