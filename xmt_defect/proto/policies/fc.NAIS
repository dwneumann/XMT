{
#************************************************************************
#*   $Version:$
#*   Package	: xmt_defect
#*   Synopsis	: eval fc.NAIS
#*   Purpose	: populates the dbStmts array with SQL statements 
#*                which insert into the  FaultClassifications table
#*                rows of [phase, type, reason]  tuples corresponding
#*                to Neumann & Associates classification policy. The
#*                NAIS scheme is a bastardized spinoff of the HP
#*                scheme... this set of classifications work well for
#*                tracking defects in hardware design and Technical
#*                Publications activities in addition to software
#*                development activities.
#*
#*   Copyright (c) 1998	Neumann & Associates Information Systems Inc.
#*   			legal.info@neumann-associates.com
#*   Licensed under the Apache License, Version 2.0 (the "License");
#*   you may not use this file except in compliance with the License.
#*   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#*   
#*   Unless required by applicable law or agreed to in writing, software
#*   distributed under the License is distributed on an "AS IS" BASIS,
#*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#*   See the License for the specific language governing permissions and
#*   limitations under the License. 
#************************************************************************

my ( @reasons, %faults );

#************************************************************************
# we use the follwing set of reasons for all types of faults...
#************************************************************************
@reasons= ( 'Incomplete', 'Incorrect', 'Unsatisfactory' );
%faults = ( 
    'Requirements'  => ['Specification' ],
    'Design'        => ['Class/Component Structure',
			'Class/Component Interface',
			'Algorithm/Circuit',
			'Validation',
			'Standards Conformance' ],
    'Implementation'=> ['Class/Component Structure',
			'Class/Component Interface',
			'Algorithm/Circuit',
			'Validation',
			'Standards Conformance' ],
    'Processes'	    => ['CM Process',
			'Development Process',
			'Test Process',
			'Release Process',
			'QMS Process',
			'Ancillary Tools' ], );

#************************************************************************
# Changes in classifications should require no changes below this point.
#************************************************************************
my ( $table, $stmt, $phase, $type, $reason );
$table = 'FaultClassifications';
foreach $phase ( keys %faults )
{
    foreach $type ( @{$faults{$phase}} )
    {
	foreach $reason ( @reasons )
	{
	    $stmt = "INSERT INTO $table VALUES 
		    ('$phase', '$type', '$reason')";
	    push( @::dbStmts, $stmt );
	    print $stmt . "\n";
	}
    }
}

}
