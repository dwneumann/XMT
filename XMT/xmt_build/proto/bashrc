#************************************************************************
#*   $Version:$
#*   Package	: xmt_build
#*   Synopsis	:
#*   Purpose	: xmt_build package .bashrc additions
#*
#*  Copyright (c) 1998	Neumann & Associates Information Systems Inc.
#*  			legal.info@neumann-associates.com
#*  Licensed under the Apache License, Version 2.0 (the "License");
#*  you may not use this file except in compliance with the License.
#*  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#*  
#*  Unless required by applicable law or agreed to in writing, software
#*  distributed under the License is distributed on an "AS IS" BASIS,
#*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#*  See the License for the specific language governing permissions and
#*  limitations under the License. 
#************************************************************************

export XMTBUILD="${XMT}/xmt_build"
export PATH="${XMTBUILD}/bin:${PATH}"

#************************************************************************
# Set XMTBUILD_SUPP_ARCHS to the list of target architectures we will
# be supporting builds for, and set XMTBUILD_DFLT_ARCH to the
# default architectures (which should match one of the
# entries of the XMTBUILD_SUPP_ARCHS list) to build if not specified
# on the 'make' commandline.
# NAIS convention is to use   `uname -s`-`uname -r`-`uname -p`
# to name architectures, but you can use any convention you want.
#
# eg:	export XMTBUILD_SUPP_ARCHS= "SunOS-5.6-sparc SunOS-5.6-i386"
#	export XMTBUILD_DFLT_ARCH= "SunOS-5.6-sparc"
#************************************************************************
export	XMTBUILD_SUPP_ARCHS="STM32F4 STM32L4 AX8052 linux_x86 cygwin"
if [ -z $XMTBUILD_DFLT_ARCH ]; then
    export XMTBUILD_DFLT_ARCH=STM32L4
fi

#************************************************************************
# useful programming-related aliases ...
#************************************************************************
if [[ $- == *i* ]]; then
    alias mk='make -j8 -k -f Makefile \!* >& \!$.ERRS'
    alias ve='vi *.ERRS'
    alias mm=makemake
    alias  cs.build='set s=`pwd`; pushd /; find $s -name "*.[chs]" -ls | sed -e "s|.* /cygdrive/c/|c:/|"  > $s/cscope.files; popd; cscope -I /cygdrive/c/Programs/gcc/arm-none-eabi/include -b'
    alias cta='cs.build'
    alias flist='cat tags|sed "s/	.*//"'
    alias fflist='flist|fgrep \!:1'
    alias funcs='sed -n "/\!*/p" tags | sed "s/	.*//"'
fi
