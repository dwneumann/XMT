xmt_build
=========
xmt_build is a package within the Extensible Mangement (XMT) collection.
xmt_build is framework for building software in a multi-platform,
multi-language environment.  xmt_build can compile complex trees of C, C++
or Java software for multiple target architectures with a small simpe Makefile
and Makefile.pkg in each source directory, that include a heirarchy of other
Makefiles that define things that don't change from directory to directory, like
target recipes and compiler paths.
- $XMTBUILD/proto/Makefile.top :
		corporate-wide common stuff: recipes and paths
- $(PROJECT/proto/Makefile.top	:
		project-wide common stuff: recipes and paths
- $XMTBUID/proto/<lang>/generic.inc :
		language-specific, architecture-agnostic stuff: file extensions etc.
- $XMTBUID/proto/<lang>/<arch>.inc :
		language-specific, architecture-specific stuff: compile flags etc.
- ./Makefile.pkg :
		package-specific oerrides only
See $XMTBUILD/proto/Makefile.pkg.help for a complete description of defined
variables tht can be overridden.

Configuring xmt_build
---------------------
To configure the xmt_build framework for multiple languages and target architectures
follow these steps:

 1. depending on your preferred shell, edit either the .bashrc or .cshrc file 
    in the XMT root directory ($XMT)
  - uncomment the appropriate "source xmt_build/proto/*rc" line

 2. configure the xmt_build pkg by editing  $XMT/xmt_build/proto/bashrc or cshrc and
    setting the environment variable XMTBUILD_DFLT_ARCH to your preferred target architecture
    from among the supported choices listed in $XMTBUILD_SUPP_ARCHS
  - save the file
  - review the compiler settings for all your languages and target architectures
    in $XMT/xmt_build/proto/lang/<language>/*.inc
    where <language> are each of those listed in that directory
  - ensure that the paths & flags to your compiler & linker are correct.

 3. source $XMT/.bashrc or $XMT/.cshrc file from your ~/.profile or ~/.cshrc

