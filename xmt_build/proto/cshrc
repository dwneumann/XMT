#************************************************************************
#*   $Version:$
#*   Package	: xmt_build
#*   Synopsis	:
#*   Purpose	: xmt_build package .cshrc additions
#*
#*  Copyright (c) 1998	Neumann & Associates Information Systems Inc.
#*  			legal.info@neumann-associates.com
#*  Licensed under the Apache License, Version 2.0 (the "License");
#*  you may not use this file except in compliance with the License.
#*  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#*  
#*  Unless required by applicable law or agreed to in writing, software
#*  distributed under the License is distributed on an "AS IS" BASIS,
#*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#*  See the License for the specific language governing permissions and
#*  limitations under the License. 
#************************************************************************

setenv XMTBUILD "$XMT/xmt_build"
setenv PATH	"${PATH}:$XMTBUILD/bin"

#************************************************************************
# Set XMTBUILD_SUPP_ARCHS to the list of target architectures we will
# be supporting builds for, and set XMTBUILD_DFLT_ARCH to the
# default architectures (which should match one of the
# entries of the XMTBUILD_SUPP_ARCHS list) to build if not specified
# on the 'make' commandline.
# NAIS convention is to use   `uname -s`-`uname -r`-`uname -p`
# to name architectures, but you can use any convention you want.
#
# eg:	setenv XMTBUILD_SUPP_ARCHS "SunOS-5.6-sparc SunOS-5.6-i386"
#	setenv XMTBUILD_DFLT_ARCH "SunOS-5.6-sparc"
#************************************************************************
setenv	XMTBUILD_SUPP_ARCHS	"STM32F4 STM32L4 AX8052 x86"
setenv	XMTBUILD_CONFIG	""
if (! $?XMTBUILD_DFLT_ARCH) then
    setenv	XMTBUILD_DFLT_ARCH	x86
endif

#************************************************************************
# useful programming-related aliases ...
#************************************************************************
if ( $?prompt ) then
    alias make		'make -j16 -k -f Makefile'
    alias mk		'make -j16 -k  -f Makefile \!* >& \!$.ERRS'
    alias ve		'vi *.ERRS'
    alias me		'more *.ERRS'
    alias rme		'rm *.ERRS'
    alias mm		makemake
    alias  cs.build	'pushd $PROJECT; set p=`pwd`/\!*; pushd /; echo building database for $p; srclist $p > $PROJECT/cscope.files; popd; cscope -I $GCCROOT/include -b; popd;'
    alias cta		'cs.build'
    alias flist 	'cat tags|sed "s/	.*//"'
    alias fflist	'flist|fgrep \!:1'
    alias funcs 	'sed -n "/\!*/p" tags | sed "s/	.*//"'
endif
