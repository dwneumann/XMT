#!/bin/perl 
#************************************************************************
#*   $Version:$
#*   Package	: xmt_defect
#*   Synopsis	:
#*   Purpose	: populate defectd database with some records for testing
#*
#*  Copyright (c) 1998	Neumann & Associates Information Systems Inc.
#*  			legal.info@neumann-associates.com
#*  Licensed under the Apache License, Version 2.0 (the "License");
#*  you may not use this file except in compliance with the License.
#*  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#*  
#*  Unless required by applicable law or agreed to in writing, software
#*  distributed under the License is distributed on an "AS IS" BASIS,
#*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#*  See the License for the specific language governing permissions and
#*  limitations under the License. 
#************************************************************************

use Getopt::Long;
use Env;

($pgmname = $0) =~ s{.*/}{};
$usage		= "usage: $pgmname [-u]\n";
GetOptions( "u" ) || die $usage;

use DBI;
$dbname = "defects";
$dbh = DBI->connect( "dbi:Pg:$dbname", '', '', )		||
    &dbdie( "connect $dbname : $DBI::errstr" );

# delete all records from the Products table, then add a new one
$dbh->do( "delete from Products" ) || &dbdie( "$DBI::errstr" );
$stmt = "insert into Products values 
    (	'xmt_defect',			-- product name
	'2.0',				-- product revision identifier
	'solaris-2.6',			-- OS/platform name
	'sparc-sun4',			-- hardware architecture
	'development version'		-- any other product identifiers
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );

# delete all records from the Persons table, then add a new one
$dbh->do( "delete from Persons" ) || &dbdie( "$DBI::errstr" );
$stmt = "insert into Persons values
    (	'Dean Neumann',			-- name of person
	'dwn',				-- DDB login username
	'sefjKaLm7zybE',		-- DDB password (stored encrypted)
	'+1 604 644 9441',		-- local or full telno of person
	'dneumann\@computer.org'	-- address to Email notifications to
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );

# delete all records from the Groups table, then add a new one
$dbh->do( "delete from Groups" ) || &dbdie( "$DBI::errstr" );
$stmt = "insert into Groups values
    (	'support',			-- name of group
	'Dean Neumann'			-- name of group member
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );
$stmt = "insert into Groups values
    (	'developers',			-- name of group
	'Dean Neumann'			-- name of group member
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );
$stmt = "insert into Groups values
    (	'dba',			-- name of group
	'Dean Neumann'			-- name of group member
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );

# delete all records from the Defects table, 
# get the Oid of the FaultClassifications and Products records,
# then use those to populate a new Defects record
$dbh->do( "delete from Defects" ) || &dbdie( "$DBI::errstr" );
$oids{FaultClassifications} = searchOid('FaultClassifications', 
     "where fc_phase = 'Requirements' and fc_reason = 'Incomplete'");
$oids{Products} = searchOid('Products');
$stmt = "insert into Defects values
    (	'012345',			-- defect ID
	'1',				-- defect severity
	$oids{FaultClassifications}, 	-- associated FaultClassification
	$oids{Products},		-- associated Product 
	'dummy defect record.  There are no real defects in xmt_defect :-)'
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );

# delete all records from the StateTransitions table, 
# get the Oid of the Defects record,
# then use that to populate a new StateTransitions record
$dbh->do( "delete from StateTransitions" ) || &dbdie( "$DBI::errstr" );
$oids{Defects} = searchOid('Defects');
$stmt = "insert into StateTransitions values
    (	$oids{Defects},			-- ID of associated Defect
	'now',				-- date/time of transition 
	'',				-- name of state being left
	'Open',				-- name of state being entered
	'Dean Neumann',			-- name of person initiating transition
	'bug report details blah blah blah'	-- remarks regarding transition
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );

# delete all records from the CM_Entities table, 
# then use that to populate a new CM_Entities record
$dbh->do( "delete from CM_Entities" ) || &dbdie( "$DBI::errstr" );
$stmt = "insert into CM_Entities values
    (	$oids{Defects},			-- ID of associated Defect
	'xmt_defect/src/foo.c',		-- pathname of file implementing fix
	'1.13'				-- revision of file implementing fix
    );",
$dbh->do( $stmt ) || &dbdie( "$DBI::errstr" );

# exit cleanly
dbdie();


sub dbdie
{
    my $msg = $_[0];
    $dbh->disconnect	if ( defined $dbh );
    undef $dbh;
    undef $sth;
    if ( defined $msg ) { die "$msg\n"; }
    exit 0;
}

sub searchOid
{
    my ( $tbl, $where ) = @_;
    my ( $sth, $i );

    if ( !defined $where ) { $where = '';}
    $sth = $dbh->prepare( "select oid from $tbl $where") ||
	dbdie( "$DBI::errstr" );
    $sth->execute;
    $sth->bind_columns( undef, \$i );
    $sth->fetch;
    $sth->finish;
    return $i;
}
