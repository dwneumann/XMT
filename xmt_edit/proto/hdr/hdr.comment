{
#************************************************************************
#   $Version:$
#   Package	: xmt_edit
#   Synopsis	:
#   Purpose	: Perl block which, when eval'ed, reformats the comment
# 		block read from stdin, preserving per-line and
# 		per-block comment delimiters and indentation, but 
# 		reformatting the contents of the comment.
#
#   Copyright (c) 1998	Neumann & Associates Information Systems Inc.
#   			legal.info@neumann-associates.com
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#   
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License. 
#************************************************************************

#************************************************************************
#  turns out piping stuff to pgm for formatting is easier than formatting
#  it ourselves, even with format or formline.
#************************************************************************
sub pgm
{
    my ( $pgm, $str ) = ( $_[0], $_[1] );
    my $tmp = "/tmp/$pgmname.$$";

    if ( $w == 0 ) { $w = 80; }
    open( TO_PGM, "|$pgm > $tmp" ) or die( "$pgm : $!" );
    print TO_PGM "$str";
    close TO_PGM;
    open( FROM_PGM, "<$tmp" ) or die( "$tmp : $!" );
    read( FROM_PGM, $str, 2**16);
    close FROM_PGM;
    unlink $tmp;
    return $str;
}

#************************************************************************
#  we pipe the indentation and delimiter patterns through expand to 
#  get an accurate length count for text length determination.
#************************************************************************
$pre = &pgm( "expand", 
	     $cmt->{delim_indent}.$cmt->{delim}.$cmt->{text_indent} );
$pre =~ s/\n*//g;
$textlen = 80 - length( $pre );

#************************************************************************
#  now we pipe the comment text through fmt, prepend the indentation 
#  and delimiter pattern to each line, and print it.
#************************************************************************
$comment = &pgm( "fmt -w $textlen", $cmt->{text} );
$comment =~ s/^/$pre/mgo;
print "$comment";

}
